
name: Tests

on: [push, pull_request]

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files

  CI:
    needs: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install and set up Poetry
      run: |
        pip install poetry
        poetry config virtualenvs.in-project true
    - name: Setup cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: deps-${{ hashFiles('**/poetry.lock') }}
    - name: Upgrade pip
      run: |
        poetry run python -m pip install pip -U
    - name: Install dependencies
      run: |
        poetry install -vvv
    - name: Test
      run: |
        poetry run pytest
    - name: Push coverage report to Codecov
      uses: codecov/codecov-action@v1
      with:
        files: .artifacts/coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
